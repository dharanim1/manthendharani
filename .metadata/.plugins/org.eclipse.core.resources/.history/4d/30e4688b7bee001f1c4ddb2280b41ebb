package JUnit;



import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class OrderServiceTest {

    @Test
    void testGetStock() {
        OrderService orderService = new OrderService();
        assertEquals(10, orderService.getstock());
    }

    @Test
    void testSetStock() {
        OrderService orderService = new OrderService();
        orderService.setStock(20);
        assertEquals(20, orderService.getstock());
    }

    @Test
    void testGetDiscount() {
        OrderService orderService = new OrderService();
        assertEquals(0.10, orderService.getDiscout());
    }

    @Test
    void testSetDiscount() {
        OrderService orderService = new OrderService();
        orderService.setDiscount(0.15);
        assertEquals(0.15, orderService.getDiscout());
    }

    @Test
    void testCalculatePrice() {
        OrderService orderService = new OrderService();
        assertEquals(90.0, orderService.calPrice(100.0, 1));
    }

    @Test
    void testPlaceOrder() {
        OrderService orderService = new OrderService();
        assertTrue(orderService.placeOrder(5));
        assertEquals(5, orderService.getstock());
    }

    @Test
    void testInsufficientStock() {
        OrderService orderService = new OrderService();
        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {
            orderService.placeOrder(15);
        });
        assertEquals("Insufficient stock", exception.getMessage());
    }

    @Test
    void testCalculateTotal() {
        OrderService orderService = new OrderService();
        double price = 50.0;
        int quantity = 2;
        double expectedTotal = price * quantity * (1 - orderService.getDiscout());
        
        assertEquals(expectedTotal, orderService.calPrice(price, quantity));
    }
}
